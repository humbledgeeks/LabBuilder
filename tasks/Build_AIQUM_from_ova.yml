---
# - name: Build AIQUM from OVA
#   hosts: localhost
#   gather_facts: false
#   vars:
#     vm_name: AIQUM
#     vm_network: "VM Network"
#     ovf_file: "files/AIQUM/ActiveIQUnifiedManager-9.8.ova"
#     vm_username: admin
#     vm_password: P@ssw0rd
#   #  ovf:class="org.linuxdistx"
#   #  These values will be used for Networking configuration
#   #
#   #  Networking configuration
#   #  Enables Auto IPv6 addressing for vApp.
#   #  IPV6Auto: false # ovf:type="boolean" ovf:userConfigurable="true" ovf:value="false">
#   # Specifies the hostname for the appliance. Leave blank if DHCP is desired.
#     vm_hostname: "aiqum2.schlab.pri" # ovf:type="string" ovf:userConfigurable="true">
#   # Specifies the IP address for the appliance. Leave blank if DHCP is desired.
#     vm_address: "192.168.123.128" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">
#   # Network Mask (or) Prefix Length
#   # Specifies the subnet to use on the deployed network. Leave blank if DHCP is desired.
#     vm_netmask: "255.255.255.0" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">
#   # Specifies the gateway on the deployed network. Leave blank if DHCP is desired.
#     vm_gateway: "192.168.123.1" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">
#   # Primary DNS ip address. Leave blank if DHCP is desired.
#     vm_dns1: "192.168.123.21" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">
#   # Secondary DNS ip address. Leave blank if DHCP is desired.
#     vm_dns2: "192.168.123.1" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">

#   vars_files: 
#     - vars/main.yml

#   tasks:
- vmware_deploy_ovf:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    datacenter: '{{ vcenter_datacenter }}'
    cluster: '{{ vcenter_cluster }}'
    datastore: '{{ vm_datastore }}'
    name: '{{ vm_name }}'
    ovf: '{{ ovf_file }}'
    disk_provisioning: thin
    power_on: yes
    wait_for_ip_address: false
    networks: 
      'nat': '{{ vm_network }}'
    inject_ovf_env: true
    properties:
      org.linuxdistx.IPV6Auto: false
      org.linuxdistx.HostFQDN: "{{vm_fqdn}}"
      org.linuxdistx.IPAddress: "{{vm_address}}"
      org.linuxdistx.NetworkMask: "{{vm_netmask}}"
      org.linuxdistx.Gateway: "{{vm_gateway}}"
      org.linuxdistx.PrimaryDNS: "{{vm_dns_server}}"
      org.linuxdistx.SecondaryDNS: "{{vm_gateway}}"
  delegate_to: localhost
  retries: 10
  delay: 60
  register: result           
  until: result is succeeded 

# This happens early in the fist boot
- name: Wait for VMware tools to become available
  community.vmware.vmware_guest_tools_wait:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: '{{ vm_name }}'
  delegate_to: localhost
  retries: 10
  delay: 60
  register: result           
  until: result is succeeded 

# This timer needs tuning
- name: Wait for 6 minutes
  wait_for: timeout=360
  delegate_to: localhost

# First is prompts for timezone info
- name: Configure appliance via sendkey
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: ENTER
    string_send: "{{item}}"
  delegate_to: localhost
  loop: 
    - "12" # US
    - "10" # Pacific
    - "" #enter

# Now we wait for it to bring up its nic
- name: Start VM
  vmware_guest:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    name: '{{ vm_name }}'
    state: poweredon
    wait_for_ip_address: true
  delegate_to: localhost

# This timer also needs tuning
- name: Wait for 4 minutes
  wait_for: timeout=240
  delegate_to: localhost

# now we set the admin creds - slowly
- name: Configure appliance via sendkey
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    string_send: "{{vm_username}}"
  delegate_to: localhost
- name: Press ENTER
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: ENTER
  delegate_to: localhost

# This timer also needs tuning
- name: Wait for 5 seconds
  wait_for: timeout=5
  delegate_to: localhost

# Password
- name: Configure appliance via sendkey
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    string_send: "{{vm_password}}"
  delegate_to: localhost
- name: Press ENTER
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: ENTER
  delegate_to: localhost

# This timer also needs tuning
- name: Wait for 5 seconds
  wait_for: timeout=5
  delegate_to: localhost

# Password confirmation
- name: Configure appliance via sendkey
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    string_send: "{{vm_password}}"
  delegate_to: localhost
- name: Press ENTER
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: ENTER
  delegate_to: localhost



