## Highly Experimental ##
## will eventually be merged into deploy_ovf_vsim
# ---
# - hosts: localhost 
#   name: Deploy vSCSI ONTAP Simulator 
#   gather_facts: false
#   vars:
#     # Download the ONTAP simpulator OVA from mysupport.netapp.com
#     # This path much be reachable by the ansible controller
#     vsim_ova: './Downloads/vsim-netapp-DOT9.8-cm_nodar.ova'
#     vm_name: DataONTAPvsim
#     allow_duplicates: false
#     vm_memory_mb: 8192 
#     vm_num_vcpus: 2
#     disk_size_gb_shelf0: "10"
#     disk_size_gb_shelf1: ""
#     disk_size_gb_shelf2: ""
#     disk_size_gb_shelf3: "" 
#     fake_ssd_disk_size_gb: 10  # all disks of this size will be treated as SSD.  set to 0 to disable
#     adp_enabled: "true"
#     cluster_network: "VM Network"
#     data_network: "VM Network"
#     sys_serial_number: "4082368-50-7" #the two current options are 408236-50-7, or 4034389-06-2
#     nvram_sysid: "4082{{ 9 | random(start=0) }}{{ 9 | random(start=0) }}{{ 9 | random(start=0) }}{{ 9 | random(start=0) }}07" #the two current options are 408236507, or 4034389062
#     ontap_node_mgmt_ip: "192.168.123.131"
#     ontap_netmask: "255.255.255.0"
#     ontap_gateway: ""
#     vmw_datacenter: "ha-datacenter" # use ha-datacenter if target is esx host 
#     vmw_cluster: "" # leave empty if target is esx host
#     esxi_address: 192.168.123.49
#     esxi_username: root
#     esxi_password: P@ssw0rd
#     esxi_datastore: TestVMs
#     esxi_login: &esxi_login
#       hostname: '{{ esxi_address }}'
#       username: '{{ esxi_username }}'
#       password: '{{ esxi_password }}'   
#       validate_certs: no 
#   tasks:
  - name: Deploy the standard vsim OVA
    community.vmware.vmware_deploy_ovf:
      <<: *esxi_login
      datacenter: '{{vmw_datacenter}}'
      cluster: '{{ vmw_cluster }}'
      datastore: "{{esxi_datastore}}"
      name: "{{vm_name}}"
      ovf: "{{vsim_ova}}"
      disk_provisioning: thin
      power_on: no
      networks: "{u'hostonly':u'{{ cluster_network }}',u'nat':u'{{ data_network }}'}"
      wait_for_ip_address: false
    delegate_to: localhost
    retries: 10
    delay: 60
    register: result           
    until: result is succeeded 

  - name: Adjust VM Sizing
    community.vmware.vmware_guest:
      <<: *esxi_login
      name: '{{ vm_name }}'
      state: present
      hardware:
        memory_mb: "{{ vm_memory_mb}}"
        num_cpus: '{{ vm_num_vcpus }}'
      customvalues:
        - key: pciHole.start
          value: 1024  # Moving the PCI hole here gives ONTAP access to more system ram
        - key: "disk.EnableUUID"
          value: "true"  # Required for vSCSI support
    delegate_to: localhost

  - name: Build Disk Shelf 0
    community.vmware.vmware_guest_disk:
      <<: *esxi_login
      datacenter: '{{vmw_datacenter}}'
      name: '{{ vm_name }}'
      disk:
        - { size_gb: '{{disk_size_gb_shelf0}}', scsi_controller: 0, unit_number: 0, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}'  }
        - { size_gb: '{{disk_size_gb_shelf0}}', scsi_controller: 0, unit_number: 1, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf0}}', scsi_controller: 0, unit_number: 2, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf0}}', scsi_controller: 0, unit_number: 3, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf0}}', scsi_controller: 0, unit_number: 4, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf0}}', scsi_controller: 0, unit_number: 5, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf0}}', scsi_controller: 0, unit_number: 6, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf0}}', scsi_controller: 0, unit_number: 8, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf0}}', scsi_controller: 0, unit_number: 9, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf0}}', scsi_controller: 0, unit_number: 10, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf0}}', scsi_controller: 0, unit_number: 11, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf0}}', scsi_controller: 0, unit_number: 12, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
    delegate_to: localhost
    when: disk_size_gb_shelf0 != ""    
  - name: Build Disk Shelf 1
    community.vmware.vmware_guest_disk:
      <<: *esxi_login
      datacenter: '{{vmw_datacenter}}'
      name: '{{ vm_name }}'
      disk:
        - { size_gb: '{{disk_size_gb_shelf1}}', scsi_controller: 1, unit_number: 0, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf1}}', scsi_controller: 1, unit_number: 1, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf1}}', scsi_controller: 1, unit_number: 2, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf1}}', scsi_controller: 1, unit_number: 3, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf1}}', scsi_controller: 1, unit_number: 4, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf1}}', scsi_controller: 1, unit_number: 5, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf1}}', scsi_controller: 1, unit_number: 6, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf1}}', scsi_controller: 1, unit_number: 8, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf1}}', scsi_controller: 1, unit_number: 9, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf1}}', scsi_controller: 1, unit_number: 10, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf1}}', scsi_controller: 1, unit_number: 11, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf1}}', scsi_controller: 1, unit_number: 12, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
    delegate_to: localhost
    when: disk_size_gb_shelf1 != ""  
  - name: Build Disk Shelf 2
    community.vmware.vmware_guest_disk:
      <<: *esxi_login
      datacenter: '{{vmw_datacenter}}'
      name: '{{ vm_name }}'
      disk:
        - { size_gb: '{{disk_size_gb_shelf2}}', scsi_controller: 2, unit_number: 0, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf2}}', scsi_controller: 2, unit_number: 1, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf2}}', scsi_controller: 2, unit_number: 2, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf2}}', scsi_controller: 2, unit_number: 3, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf2}}', scsi_controller: 2, unit_number: 4, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf2}}', scsi_controller: 2, unit_number: 5, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf2}}', scsi_controller: 2, unit_number: 6, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf2}}', scsi_controller: 2, unit_number: 8, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf2}}', scsi_controller: 2, unit_number: 9, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf2}}', scsi_controller: 2, unit_number: 10, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf2}}', scsi_controller: 2, unit_number: 11, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf2}}', scsi_controller: 2, unit_number: 12, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
    delegate_to: localhost
    when: disk_size_gb_shelf2 != ""  
  - name: Build Disk Shelf 3
    community.vmware.vmware_guest_disk:
      <<: *esxi_login
      datacenter: '{{vmw_datacenter}}'
      name: '{{ vm_name }}'
      disk:
        - { size_gb: '{{disk_size_gb_shelf3}}', scsi_controller: 3, unit_number: 0, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf3}}', scsi_controller: 3, unit_number: 1, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf3}}', scsi_controller: 3, unit_number: 2, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf3}}', scsi_controller: 3, unit_number: 3, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf3}}', scsi_controller: 3, unit_number: 4, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf3}}', scsi_controller: 3, unit_number: 5, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf3}}', scsi_controller: 3, unit_number: 6, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf3}}', scsi_controller: 3, unit_number: 8, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf3}}', scsi_controller: 3, unit_number: 9, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf3}}', scsi_controller: 3, unit_number: 10, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf3}}', scsi_controller: 3, unit_number: 11, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
        - { size_gb: '{{disk_size_gb_shelf3}}', scsi_controller: 3, unit_number: 12, scsi_type: 'lsilogicsas', type: thin, state: present, datastore: '{{esxi_datastore}}' }
    delegate_to: localhost
    when: disk_size_gb_shelf3 != ""  

  - name: Start VM
    community.vmware.vmware_guest:
      <<: *esxi_login
      name: '{{ vm_name }}'
      state: poweredon
      wait_for_ip_address: false
    delegate_to: localhost
  # - name: Wait for 5 seconds for loader
  #   wait_for: timeout=5
  #   delegate_to: localhost
  - name: Press Space to interrupt autoboot
    community.vmware.vmware_guest_sendkey:
      <<: *esxi_login
      name: "{{ vm_name }}"
      keys_send: SPACE
    delegate_to: localhost
    loop:
      - ""
      - ""
      - ""
      - ""
      - ""
  - name: configure loader variable via sendkeys
    community.vmware.vmware_guest_sendkey:
      <<: *esxi_login
      name: "{{ vm_name }}"
      keys_send: ENTER
      string_send: "{{item}}"
    delegate_to: localhost
    loop: 
      # Set Serial Number and Sysid
      - "setenv SYS_SERIAL_NUMBER {{sys_serial_number}}"
      - "setenv bootarg.nvram.sysid {{nvram_sysid}}"
      # Enable dhcp for node_mgmt
      - "setenv bootarg.init.dhcp.disable false"
      # Disable simulated disks
      - "setenv bootarg.vm.sim.vdevinit false"
      - "setenv bootarg.sim.vdevinit false"
      - "setenv bootarg.srm.disk.simnames false"
      - "setenv bootarg.srm.disk.simulated false"      
      # Enable virtual disks
      - "setenv bootarg.srm.disk.config.pci true"
      - "setenv bootarg.srm.virtual.adapter true"
      - "setenv bootarg.vm.data_diskmodel vscsi"  
      # Set default raid type and checksum method    
      - "setenv bootarg.vm.raidtype RAID-DP"
      - "setenv bootarg.vm.checksum_type block"
      # ADP Settings
      - "setenv root-uses-shared-disks? {{adp_enabled}}"
      - "setenv allow-root-data1-data2-partitions? {{adp_enabled}}"
      # Trigger an automatic option 4
      - "setenv bootarg.bootmenu.allow_opts true"
      - "setenv bootarg.bootmenu.args 4a"
      - "setenv bootarg.init.bootmenu true"
      - ""

  - name: enable fake-ssd
    community.vmware.vmware_guest_sendkey:
      <<: *esxi_login
      name: "{{ vm_name }}"
      keys_send: ENTER
      string_send: "{{item}}"
    delegate_to: localhost
    loop: 
      - "setenv wafl-idedupe-allow-lowend? true"
      - "setenv allow-flash-optimized? true"
      - "setenv bootarg.init.flash_optimized true"
      - "setenv bootarg.vm.init.flash_optimized true"
      - "setenv allow-ssd-partitions? true"
      - "setenv fake-ssd {{ ((((fake_ssd_disk_size_gb * 1024)-1/9)*8/9)|int)-6}}"
      - ""
    when: fake_ssd_disk_size_gb != 0


  - name: boot_ontap
    community.vmware.vmware_guest_sendkey:
      <<: *esxi_login
      name: "{{ vm_name }}"
      keys_send: ENTER
      string_send: "{{item}}"
    delegate_to: localhost
    loop: 
      - "boot_ontap"
      - "" # this is here to force the enter key after the preceding command

  - name: Wait for VMware tools to become available
    community.vmware.vmware_guest_tools_wait:
      <<: *esxi_login
      name: '{{ vm_name }}'
    delegate_to: localhost
    retries: 3
    delay: 15
    register: result           
    until: result is succeeded 
  - name: Wait for 30 seconds for Startup to Complete
    wait_for: timeout=30
    delegate_to: localhost
    when: ontap_node_mgmt_ip != ""
 
  - name: Complete Node Setup
    community.vmware.vmware_guest_sendkey:
      <<: *esxi_login
      name: "{{ vm_name }}"
      keys_send: ENTER
      string_send: "{{item}}"
    delegate_to: localhost
    loop:
      - "admin"
      - "cluster setup" 
      - "yes"
      - "e0c" # node mgmt port
      - "{{ontap_node_mgmt_ip}}"
      - "{{ontap_netmask}}"
      - "{{ontap_gateway}}"
      - "" # this completes the node setup phase
    when: ontap_node_mgmt_ip != ""


