---
#- include_vars: defaults/Build_ONTAP_Simulator_from_OVA.yml
- name: set defaults
  set_fact:
    vm_name:            '{{ vm_name            |default("SimulateONTAP") }}'
    vm_num_cpus:        '{{ vm_num_cpus        |default(2) }}'
    vm_memory_mb:       '{{ vm_memory_mb       |default(8192) }}'
    ontap_version:      '{{ ontap_version      |default(9.8) }}'
    vsim_ova:           "{{ vsim_ova           |default('files/ONTAPSimulator/vsim-netapp-DOT{{ontap_version}}-cm_nodar.ova') }}" 
    ontap_node_mgmt_ip: "{{ ontap_node_mgmt_ip |default('') }}"
    ontap_netmask:      "{{ ontap_netmask      |default('') }}"
    ontap_gateway:      "{{ ontap_gateway      |default('') }}"
    cluster_network:    "{{ cluster_network    |default('VM Network') }}"
    data_network:       "{{ data_network       |default('VM Network') }}"
    sys_serial_number:  "{{ sys_serial_number  |default('4082368-50-7') }}"
    nvram_sysid:        "{{ nvram_sysid        |default('') }}"
    vdevinit: "{{ vdevinit |default('31:14:0,31:14:1,31:14:2,31:14:3') }}"

- name: generate sysid
  set_fact:
    nvram_sysid: "4082{{ 9 | random(start=0) }}{{ 9 | random(start=0) }}{{ 9 | random(start=0) }}{{ 9 | random(start=0) }}07" #the two current options are 408236507, or 4034389062
  when: nvram_sysid == ""

- vmware_deploy_ovf:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    datacenter: "{{vcenter_datacenter}}"
    cluster: '{{ vcenter_cluster }}'
    datastore: "{{vm_datastore}}"
    name: "{{vm_name}}"
    ovf: "{{vsim_ova}}"
    disk_provisioning: thin
    power_on: no
    networks: "{u'hostonly':u'{{ cluster_network }}',u'nat':u'{{ data_network }}'}"
    wait_for_ip_address: false
  delegate_to: localhost
  retries: 10
  delay: 60
  register: result           
  until: result is succeeded 

- name: Adjust VM Sizing
  vmware_guest:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: '{{ vm_name }}'
    state: present
    hardware:
      memory_mb: "{{ vm_memory_mb}}"
      num_cpus: '{{ vm_num_cpus }}'
    # customvalues:
    #   - key: pciHole.start
    #     value: 1024  # Moving the PCI hole here gives ONTAP access to more system ram
  delegate_to: localhost

- name: Start VM
  vmware_guest:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: '{{ vm_name }}'
    state: poweredon
    wait_for_ip_address: false
  delegate_to: localhost

- name: Wait for 5 seconds
  wait_for: timeout=5
  delegate_to: localhost

- name: Press Space to interrupt autoboot
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: '{{item}}'
  delegate_to: localhost
  loop: [ SPACE, SPACE, SPACE, SPACE, SPACE ]

- name: configure loader variable via sendkeys
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: ENTER
    string_send: "{{item}}"
  delegate_to: localhost
  loop: 
    - "setenv SYS_SERIAL_NUMBER {{sys_serial_number}}"
    - "setenv bootarg.nvram.sysid {{nvram_sysid}}"
    - "setenv bootarg.vm.sim.vdevinit {{vdevinit}}"
    - "setenv bootarg.sim.vdevinit {{vdevinit}}"
    - "boot_ontap"
    - "" # this is here to force the enter key after the preceding command

- name: Wait for VMware tools to become available
  community.vmware.vmware_guest_tools_wait:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: '{{ vm_name }}'
  delegate_to: localhost
  retries: 3
  delay: 15
  register: result           
  until: result is succeeded 

- name: Run node setup
  block:
  # vmware tools come up a little early so we need to pause for a bit
  - name: Wait for 30 seconds for Startup to Complete
    wait_for: timeout=30
    delegate_to: localhost
    when: ontap_node_mgmt_ip != "" 

  # Send keys via HID to complete setup at the vidconsole
  - name: Complete Node Setup
    community.vmware.vmware_guest_sendkey:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'     
      validate_certs: no 
      name: "{{ vm_name }}"
      keys_send: ENTER
      string_send: "{{item}}"
    delegate_to: localhost
    loop: 
      - "admin"
      - "cluster setup"
      - "yes"
      - "e0c" # node mgmt port
      - "{{ontap_node_mgmt_ip}}"
      - "{{ontap_netmask}}"
      - "{{ontap_gateway}}"
      - "" # this completes the node setup phase

  when: ontap_node_mgmt_ip != ""
# block:end


