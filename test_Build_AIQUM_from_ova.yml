---
- name: Build AIQUM from OVA
  hosts: localhost
  gather_facts: false
  vars:
    vm_name: AIQUM
    vm_network: "VM Network"
    aiqum_ova: "files/AIQUM/ActiveIQUnifiedManager-9.8.ova"
    vm_username: admin
    vm_password: P@ssw0rd
  #  ovf:class="org.linuxdistx"
  #  These values will be used for Networking configuration
  #
  #  Networking configuration
  #  Enables Auto IPv6 addressing for vApp.
  #  IPV6Auto: false # ovf:type="boolean" ovf:userConfigurable="true" ovf:value="false">
  # Specifies the hostname for the appliance. Leave blank if DHCP is desired.
    vm_hostname: "aiqum2.schlab.pri" # ovf:type="string" ovf:userConfigurable="true">
  # Specifies the IP address for the appliance. Leave blank if DHCP is desired.
    vm_address: "192.168.123.128" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">
  # Network Mask (or) Prefix Length
  # Specifies the subnet to use on the deployed network. Leave blank if DHCP is desired.
    vm_netmask: "255.255.255.0" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">
  # Specifies the gateway on the deployed network. Leave blank if DHCP is desired.
    vm_gateway: "192.168.123.1" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">
  # Primary DNS ip address. Leave blank if DHCP is desired.
    vm_dns1: "192.168.123.21" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">
  # Secondary DNS ip address. Leave blank if DHCP is desired.
    vm_dns2: "192.168.123.1" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">

  vars_files: 
    - vars/main.yml

  tasks:
  - vmware_deploy_ovf:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: no
      datacenter: '{{ vcenter_datacenter }}'
      cluster: '{{ vcenter_cluster }}'
      datastore: '{{ vm_datastore }}'
      name: '{{ vm_name }}'
      ovf: '{{ aiqum_ova }}'
      disk_provisioning: thin
      power_on: yes
      wait_for_ip_address: false
      networks: "{u'ONTAP Select Network':u'{{ vm_network }}',u'nat':u'{{ vm_network }}'}"
      inject_ovf_env: true
      properties:
        org.linuxdistx.IPV6Auto: false
        org.linuxdistx.HostFQDN: "{{vm_hostname}}"
        org.linuxdistx.IPAddress: "{{vm_address}}"
        org.linuxdistx.NetworkMask: "{{vm_netmask}}"
        org.linuxdistx.Gateway: "{{vm_gateway}}"
        org.linuxdistx.PrimaryDNS: "{{vm_dns1}}"
        org.linuxdistx.SecondaryDNS: "{{vm_dns2}}"
    delegate_to: localhost
    retries: 10
    delay: 60
    register: result           
    until: result is succeeded 

  # This happens early in the fist boot
  - name: Wait for VMware tools to become available
    community.vmware.vmware_guest_tools_wait:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'     
      validate_certs: no 
      name: '{{ vm_name }}'
    delegate_to: localhost
    retries: 10
    delay: 60
    register: result           
    until: result is succeeded 

  # This timer needs tuning
  - name: Pause for 6 minutes
    pause:
      minutes: 6

  # First is prompts for timezone info
  - name: Configure appliance via sendkey
    community.vmware.vmware_guest_sendkey:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'    
      validate_certs: no 
      name: "{{ vm_name }}"
      keys_send: ENTER
      string_send: "{{item}}"
    delegate_to: localhost
    loop: 
      - "12" # US
      - "10" # Pacific
      - "" #enter

  # Now we wait for it to bring up its nic
  - name: Start VM
    vmware_guest:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: no
      name: '{{ vm_name }}'
      state: poweredon
      wait_for_ip_address: true
    delegate_to: localhost

  # This timer also needs tuning
  - name: Pause for 4 minutes
    pause:
      minutes: 4

  # now we set the admin creds - slowly
  - name: Configure appliance via sendkey
    community.vmware.vmware_guest_sendkey:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'    
      validate_certs: no 
      name: "{{ vm_name }}"
      string_send: "{{vm_username}}"
    delegate_to: localhost
  - name: Press ENTER
    community.vmware.vmware_guest_sendkey:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'    
      validate_certs: no 
      name: "{{ vm_name }}"
      keys_send: ENTER
    delegate_to: localhost

  # This timer also needs tuning
  - name: Pause for 5 seconds
    pause:
      seconds: 5

  # Password
  - name: Configure appliance via sendkey
    community.vmware.vmware_guest_sendkey:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'    
      validate_certs: no 
      name: "{{ vm_name }}"
      string_send: "{{vm_password}}"
    delegate_to: localhost
  - name: Press ENTER
    community.vmware.vmware_guest_sendkey:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'    
      validate_certs: no 
      name: "{{ vm_name }}"
      keys_send: ENTER
    delegate_to: localhost

  # This timer also needs tuning
  - name: Pause for 5 seconds
    pause:
      seconds: 5

  # Password confirmation
  - name: Configure appliance via sendkey
    community.vmware.vmware_guest_sendkey:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'    
      validate_certs: no 
      name: "{{ vm_name }}"
      string_send: "{{vm_password}}"
    delegate_to: localhost
  - name: Press ENTER
    community.vmware.vmware_guest_sendkey:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'    
      validate_certs: no 
      name: "{{ vm_name }}"
      keys_send: ENTER
    delegate_to: localhost



