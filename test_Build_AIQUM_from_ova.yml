---
- name: Build AIQUM from OVA
  hosts: localhost
  gather_facts: false
  vars:
    vm_name: TEST_AIQUM
    vm_network: "VM Network"
    aiqum_ova: "files/AIQUM/ActiveIQUnifiedManager-9.8.ova"
    vm_username: admin
    vm_password: P@ssw0rd
  #  ovf:class="org.linuxdistx"
  #  These values will be used for Networking configuration
  #
  #  Networking configuration
  #  Enables Auto IPv6 addressing for vApp.
    IPV6Auto: false # ovf:type="boolean" ovf:userConfigurable="true" ovf:value="false">
  # Specifies the hostname for the appliance. Leave blank if DHCP is desired.
    HostFQDN: "" # ovf:type="string" ovf:userConfigurable="true">
  # Specifies the IP address for the appliance. Leave blank if DHCP is desired.
    IPAddress: "" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">
  # Network Mask (or) Prefix Length
  # Specifies the subnet to use on the deployed network. Leave blank if DHCP is desired.
    NetworkMask: "" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">
  # Specifies the gateway on the deployed network. Leave blank if DHCP is desired.
    Gateway: "" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">
  # Primary DNS ip address. Leave blank if DHCP is desired.
    PrimaryDNS: "" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">
  # Secondary DNS ip address. Leave blank if DHCP is desired.
    SecondaryDNS: "" # ovf:required="false" ovf:type="string" ovf:userConfigurable="true">

  vars_files: 
    - vars/vars-esx.yml

  tasks:
  - vmware_deploy_ovf:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: no
      datacenter: '{{ vcenter_datacenter }}'
      cluster: '{{ vcenter_cluster }}'
      datastore: '{{ vm_datastore }}'
      name: '{{ vm_name }}'
      ovf: '{{ aiqum_ova }}'
      disk_provisioning: thin
      power_on: no
      wait_for_ip_address: false
      networks: "{u'ONTAP Select Network':u'{{ vm_network }}',u'nat':u'{{ vm_network }}'}"
      inject_ovf_env: true
      properties:
        IPV6Auto: false
        HostFQDN: ""
        IPAddress: ""
        NetworkMask: ""
        Gateway: ""
        PrimaryDNS: ""
        SecondaryDNS: ""
    delegate_to: localhost
    retries: 10
    delay: 60
    register: result           
    until: result is succeeded 

  - name: Start VM
    vmware_guest:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: no
      name: '{{ vm_name }}'
      state: poweredon
      wait_for_ip_address: false
    delegate_to: localhost

  - name: Wait for VMware tools to become available
    community.vmware.vmware_guest_tools_wait:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'     
      validate_certs: no 
      name: '{{ vm_name }}'
    delegate_to: localhost
    retries: 3
    delay: 15
    register: result           
    until: result is succeeded 

  - name: Pause for 5 minutes
    pause:
      minutes: 5

  - name: Configure appliance via sendkey
    community.vmware.vmware_guest_sendkey:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'    
      validate_certs: no 
      name: "{{ vm_name }}"
      keys_send: ENTER
      string_send: "{{item}}"
    delegate_to: localhost
    loop: 
      - "12" # US
      - "10" # Pacific
      - "{{vm_username}}" # username
      - "{{vm_password}}"
      - "{{vm_password}}"
      - "" # this is here to force the enter key after the preceding command



