---
- name: set defaults
  set_fact:
    vm_name:                 '{{ vm_name                 |default("ONTAPSelect") }}'
    vm_num_cpus:             '{{ vm_num_cpus             |default(4)      }}'
    vm_memory_mb:            '{{ vm_memory_mb            |default(16384)  }}'
    vm_cpu_reservation_mhz:  '{{ vm_cpu_reservation_mhz  |default(2000)   }}'  
    ontap_deployment_option: '{{ ontap_deployment_option |default("ONTAPSelectEVALSmall") }}'  
    vm_disk_provisioning:    '{{ vm_disk_provisioning    |default("thin") }}' 
    vm_data_disk_gb:         '{{ vm_data_disk_gb         |default("500")  }}'
    ontap_cluster_name:      '{{ ontap_cluster_name      |default("ONTAP") }}'
    ontap_password:          '{{ ontap_password          |default("Changeme!") }}'
    ontap_version:           "{{ ontap_version           |default('9.8')  }}"
    
- name: locate ovf ovf_file
  stat:
    path: "{{ovf_file | default('')}}" 
  delegate_to: localhost
  register: ovf_location

- name: Check althernate ovf_file location
  stat: 
    path: "{{playbook_dir}}/files/{{ontap_version}}_DataONTAPv-esx-standalone-eval-nodar.ova"
  delegate_to: localhost
  register: ovf_playbook_dir
  when: not ovf_location.stat.exists

- name: select ovf_file
  set_fact: 
    ovf_file: "{{playbook_dir}}/files/{{ontap_version}}_DataONTAPv-esx-standalone-eval-nodar.ova"
  when:
    - not ovf_location.stat.exists
    - ovf_playbook_dir.stat.exists

- name: selected OVF file
  debug:
    msg: "{{ovf_file}}"

- community.vmware.vmware_deploy_ovf:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    datacenter: '{{ vcenter_datacenter }}'
    cluster: '{{ vcenter_cluster }}'
    datastore: '{{ vm_datastore }}'
    name: '{{ vm_name }}'
    ovf: '{{ ovf_file }}'
    disk_provisioning: '{{vm_disk_provisioning}}'
    power_on: no
    wait_for_ip_address: false
    networks: "{u'ONTAP Select Network':u'{{ vm_network }}',u'nat':u'{{ vm_network }}'}"
    inject_ovf_env: true
    properties:
      DeploymentOption.value: '{{ontap_deployment_option}}' # <=9.5 use 'ONTAPSelectEVAL', 9.6+ use 'ONTAPSelectEVALSmall'
      clustername: '{{ ontap_cluster_name }}'
      Data-disk: '{{ vm_data_disk_gb }}'
      cluster_mgmt_ipaddr: '{{ ontap_cluster_mgmt_ip }}' 
      node_mgmt_ipaddr: '{{ ontap_node_mgmt_ip }}' 
      netmask: '{{ ontap_netmask }}' 
      gateway: '{{ ontap_gateway }}' 
      node_name: '{{ ontap_cluster_name }}-01' 
      password: '{{ ontap_password }}' 
  delegate_to: localhost
  retries: 10
  delay: 60
  register: result           
  until: result is succeeded 
  
- name: Adjust VM Sizing
  community.vmware.vmware_guest:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    name: '{{ vm_name }}'
    state: present
    hardware:
      memory_mb: '{{ vm_memory_mb|int }}'
      num_cpus: '{{ vm_num_cpus|int }}'
#        memory_reservation_lock: true
      cpu_reservation: "{{ vm_cpu_reservation_mhz|int }}"
    # customvalues:   # <- this broke in Ansible 2.10
    #   - key: pciHole.start
    #     value: 1024  # Moving the PCI hole here gives ONTAP access to more system ram
  delegate_to: localhost

- name: Start VM
  community.vmware.vmware_guest:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    name: '{{ vm_name }}'
    state: poweredon
    wait_for_ip_address: false
  delegate_to: localhost

- name: Wait for VMware tools to become available
  community.vmware.vmware_guest_tools_wait:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: '{{ vm_name }}'
  delegate_to: localhost
  retries: 3
  delay: 15
  register: result           
  until: result is succeeded 

- name: Wait for 60 seconds for Startup to Complete
  wait_for: timeout=60
  delegate_to: localhost


