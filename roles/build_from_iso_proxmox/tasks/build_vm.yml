---
- name: variable defaults
  set_fact:
    vm_address:      "{{vm_address      | default('') }}"
    vm_netmask_cidr: "{{vm_netmask_cidr | default('') }}"
    vm_gateway:      "{{vm_gateway      | default('') }}"
    vm_dns_server:   "{{vm_dns_server   | default('') }}"
    vm_domain:       "{{vm_domain       | default('') }}"
    vm_hostname:     "{{vm_hostname     | default('centosvm') }}"
    vm_name:         "{{vm_name         | default('centosvm') }}"
    vm_eth_name:     "{{vm_eth_name     | default('ens32') }}"
    vm_username:     "ubuntu"
    # vm_password:     "P@ssw0rd2"
    vm_password_old: "ubuntu" #"{{cloudinit_password | default('Changeme!') }}"
    vm_password:     "{{ vm_password | default('P@ssw0rd') }}"
    config_iso:      "{{ vm_name }}-seed.iso"
    dnf_or_yum:      "yum"

- name: Check if install ISO exists
  community.vmware.vsphere_file:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'   
    validate_certs: no
    datacenter: "{{vcenter_datacenter}}"
    datastore: "{{ iso_datastore }}"
    path: "{{ install_iso }}"
    state: file
  register: install_iso_exists
  delegate_to: localhost
  ignore_errors: true 

- name: Copy install iso to datastore
  community.vmware.vsphere_copy:
    hostname:   "{{ vcenter_address }}"
    username:   "{{ vcenter_username }}"
    password:   "{{ vcenter_password }}"
    validate_certs: no 
    src:        "{{ role_path }}/files/{{install_iso}}"
    datacenter: "{{ vcenter_datacenter}}"
    datastore:  "{{ iso_datastore }}"
    path:       "{{ install_iso }}"
  delegate_to: localhost
  ignore_errors: true #if the playbook is being re-run while the vm is on, the iso cannot be replaced
  when: install_iso_exists.failed

- name: Check if install ISO exists
  community.vmware.vsphere_file:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'   
    validate_certs: no
    datacenter: "{{vcenter_datacenter}}"
    datastore: "{{ iso_datastore }}"
    path: "{{ install_iso }}"
    state: file
  register: install_iso_exists
  delegate_to: localhost
  ignore_errors: true 

- name: If the ISO is not present have ESXi download it
  block:
  - name: Add ESXi to Ansible Hosts for SSH
    add_host:
      name: '{{ esxi_address }}'
      group: "esx"
      ansible_user: '{{ esxi_username }}'
      ansible_password: '{{ esxi_password }}'
      ansible_ssh_common_args: '-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'

  - name: Enable ESX SSH (TSM-SSH)
    community.vmware.vmware_host_service_manager:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'   
      validate_certs: no 
      esxi_hostname: '{{ esxi_hostname }}'
      service_name: TSM-SSH
      state: present
    register: tsm_ssh_service
    delegate_to: localhost

  - name: Enable ESX Shell (TSM)
    community.vmware.vmware_host_service_manager:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'    
      validate_certs: no 
      esxi_hostname: '{{ esxi_hostname }}'
      service_name: TSM
      state: present
    register: tsm_service
    delegate_to: localhost

  - name: Download the Centos ISO
    shell: 'wget -P /vmfs/volumes/{{ iso_datastore }} {{ install_iso_url }} --no-check-certificate'
    args:
      creates: '/vmfs/volumes/{{ iso_datastore }}/{{ install_iso }}'
    delegate_to: '{{ esxi_address }}'

  - name: Disable ESX SSH (TSM-SSH)
    community.vmware.vmware_host_service_manager:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'    
      validate_certs: no 
      esxi_hostname: '{{ esxi_hostname }}'
      service_name: TSM-SSH
      state: absent
    delegate_to: localhost
    when: tsm_ssh_service.changed

  - name: Disable ESX Shell (TSM)
    community.vmware.vmware_host_service_manager:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'   
      validate_certs: no 
      esxi_hostname: '{{ esxi_hostname }}'
      service_name: TSM
      state: absent
    delegate_to: localhost
    when: tsm_service.changed
  when: install_iso_exists.failed
## End Block

- name: Create VM
  community.vmware.vmware_guest:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}' 
    validate_certs: no 
    datacenter: "{{vcenter_datacenter}}"
    cluster: '{{vcenter_cluster}}'    
    folder: /
    name: '{{ vm_name }}'
    state: present
    guest_id: ubuntu64Guest
    cdrom:
        - controller_number: 0
          unit_number: 0
          state: present
          type: iso
          iso_path: '[{{ iso_datastore }}] {{ install_iso }}'
    disk:
    - size_gb: '{{ vm_disk_gb | default(40) }}'
      type: thin
      datastore: '{{ vm_datastore }}'
    hardware:
      memory_mb: '{{ vm_memory_mb | default(2048) }}'
      num_cpus: '{{ vm_num_cpus | default(2) }}'
      nested_virt: '{{ nested_virtualization|default(true) }}'
      scsi: lsilogicsas
    networks:
    - name: "{{ vm_network | default('VM Network') }}"
      device_type: e1000
    wait_for_ip_address: no
  delegate_to: localhost
  register: deploy_vm

- name: Set boot order
  community.vmware.vmware_guest_boot_manager:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'   
    validate_certs: no  
    name: '{{ vm_name }}'
    boot_delay: 1000
    enter_bios_setup: False
    boot_retry_enabled: True
    boot_retry_delay: 20000
    boot_firmware: bios
    secure_boot_enabled: False
    boot_order:
      - disk
      - cdrom
      - ethernet
      - floppy
  delegate_to: localhost
  register: vm_boot_order

- name: Power-On the virtual machine
  community.vmware.vmware_guest_powerstate:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: '{{ vm_name }}'
    state: powered-on
  delegate_to: localhost
  register: powerstate

- name: Wait for 30 seconds for boot
  wait_for: timeout=30
  delegate_to: localhost

- name: Select text based installer
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: 
     - DOWNARROW
     - ENTER
  delegate_to: localhost

- name: Wait for 45 seconds for text installer to load
  wait_for: timeout=45
  delegate_to: localhost

- name: press enter on license prompt
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: ENTER
  delegate_to: localhost

- name: press enter on target disk prompt
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: ENTER
  delegate_to: localhost

# - name: set location to Unitied States
#   community.vmware.vmware_guest_sendkey:
#     hostname: '{{ vcenter_address }}'
#     username: '{{ vcenter_username }}'
#     password: '{{ vcenter_password }}'     
#     validate_certs: no 
#     name: "{{ vm_name }}"
#     keys_send: 
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - ENTER
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - UPARROW
#      - ENTER
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#   delegate_to: localhost

- name: set timezone to America/Los_Angeles
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: 
     - UPARROW
     - UPARROW
     - ENTER
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - DOWNARROW
     - ENTER
     - DOWNARROW
     - DOWNARROW
  delegate_to: localhost

# - name: set keyboard to U.S.English
#   community.vmware.vmware_guest_sendkey:
#     hostname: '{{ vcenter_address }}'
#     username: '{{ vcenter_username }}'
#     password: '{{ vcenter_password }}'     
#     validate_certs: no 
#     name: "{{ vm_name }}"
#     keys_send: 
#      - UPARROW
#      - ENTER
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#      - DOWNARROW
#      - ENTER
#   delegate_to: localhost

- name: Wait for 30 seconds
  wait_for: timeout=30
  delegate_to: localhost

- name: Accept configuration
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: 
     - DOWNARROW
     - ENTER
  delegate_to: localhost


- name: set password
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    string_send: "{{ vm_password }}"
  delegate_to: localhost

- name: confirm password
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: DOWNARROW
    string_send: "{{ vm_password }}"
  delegate_to: localhost

- name: set email
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: 
     - DOWNARROW
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
    string_send: "mail@example.com"
  delegate_to: localhost

- name: Wait for 30 seconds
  wait_for: timeout=30
  delegate_to: localhost

- name: Accept configuration
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: 
     - DOWNARROW
     - ENTER
  delegate_to: localhost

- name: set hostname
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: 
     - UPARROW
     - UPARROW
     - UPARROW
     - UPARROW
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
    string_send: "{{vm_hostname}}.{{vm_domain}}"
  delegate_to: localhost

- name: set IP
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: 
     - DOWNARROW
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
    string_send: "{{vm_address}}"
  delegate_to: localhost

- name: set CIDR
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: 
     - RIGHTARROW
     - RIGHTARROW
     - RIGHTARROW
     - RIGHTARROW
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
    string_send: "{{vm_netmask_cidr}}"
  delegate_to: localhost

- name: set gateway
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: 
     - DOWNARROW
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
    string_send: "{{vm_gateway}}"
  delegate_to: localhost

- name: set dns
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: 
     - DOWNARROW
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
     - BACKSPACE
    string_send: "{{vm_dns_server}}"
  delegate_to: localhost

- name: Wait for 30 seconds
  wait_for: timeout=30
  delegate_to: localhost

- name: Accept configuration
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: 
     - DOWNARROW
     - ENTER
  delegate_to: localhost

- name: Begin Installation
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: 
     - RIGHTARROW
     - ENTER
  delegate_to: localhost

- name: Wait for 8 minutes for install
  wait_for: timeout=480
  delegate_to: localhost

# login
- name: login
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    string_send: "root"
  delegate_to: localhost

- name: press enter
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: "ENTER"
  delegate_to: localhost

- name: password
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    string_send: "{{vm_password}}"
  delegate_to: localhost

- name: press enter
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: "ENTER"
  delegate_to: localhost

- name: apt update
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    string_send: "apt update"
  delegate_to: localhost

- name: press enter
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: "ENTER"
  delegate_to: localhost

- name: Wait for 60 seconds
  wait_for: timeout=60
  delegate_to: localhost

- name: apt update
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    string_send: "apt install open-vm-tools -y"
  delegate_to: localhost

- name: press enter
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: "ENTER"
  delegate_to: localhost

- name: Wait for VMware tools to become available 
  community.vmware.vmware_guest_tools_wait:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'   
    validate_certs: no 
    name: '{{ vm_name }}'
  delegate_to: localhost
  retries: 10
  delay: 60
  register: result           
  until: result is succeeded
