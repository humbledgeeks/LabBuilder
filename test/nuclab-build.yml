---
- name: Install NetApp VAAI vib on ESXi Host
  hosts: localhost
  gather_facts: false
  vars:
    # These variable are for the host being configured
    esxi_address: 192.168.123.140
    esxi_hostname: NestedESX140
    esxi_username: root
    esxi_password: P@ssw0rd
    vm_datastore: datastore1
    iso_datastore: datastore1

    # These variables also alias to the host
    vcenter_address: '{{esxi_address}}'
    vcenter_username: '{{esxi_username}}'
    vcenter_password: '{{esxi_password}}'
    vcenter_datacenter: 'ha-datacenter'
    vcenter_cluster: ""

    # These variables define the management/vm network of the esxi host
    vm_network_portgroup: "VM Network"
    vm_network_netmask_cidr: "24"
    vm_network_gateway: 192.168.123.1
    vm_network_dns: 192.168.123.1

    # These variables control the resources being provisioned
    lab_password: P@ssw0rd
    lab_dc01_hostname: dc01
    lab_dc01_domain: nuc.lab
    lab_dc01_ip: 192.168.123.141

#    skip_dc01_vm: true
#    skip_dc01_extras: true
    skip_vcsa_vm: true
    skip_ots_vm: true

  tasks:
    # Inband access to the ESX host is assumed
    # because this playbook configures the 
    # hosting infrastructure to run the nested labs

    # Install the VAAI vib first to get the reboot out of the way
    - name: Install NetApp VAAI vib on ESXi Host
      meta: noop
    - block:
      - set_fact:
          # esxi_address: 192.168.123.140
          # esxi_username: root
          # esxi_password: P@ssw0rd
          apply_vsc_settings: true
          reboot_esxi_host: true
          vaai_vib_file: "files/NetAppNasPlugin.v23.vib"
          esxi_datastore: "{{iso_datastore}}"
      - include_tasks: tasks/install_vaai_on_esxi_host.yml

    - name: Configure Host to support vlab
      meta: noop
    - block:
      - name: Set Advanced Options
        vmware_host_config_manager:
          hostname: '{{ esxi_address }}'
          username: '{{ esxi_username }}'
          password: '{{ esxi_password }}'   
          validate_certs: no 
          esxi_hostname: '{{ esxi_address }}'
          options:
            "Mem.ShareForceSalting": 0    # To maximize VM density
            "Misc.BlueScreenTimeout": 60  # To automatically reboot after a PSOD
        delegate_to: localhost

      # This firewall rule allows the host to support telnet connections to guest serial port consoles
      - name: Manage Firewall Rules
        vmware_host_firewall_manager:
          hostname: '{{ esxi_address }}'
          username: '{{ esxi_username }}'
          password: '{{ esxi_password }}'   
          validate_certs: no
          esxi_hostname: '{{ esxi_address }}'      
          rules:
            - name: remoteSerialPort 
              enabled: true
        delegate_to: localhost

      # this vswitch is used for portgroups internal to nested lab instances
      - name: Add an isolated VMWare vSwitch
        vmware_vswitch:
          hostname: '{{ esxi_address }}'
          username: '{{ esxi_username }}'
          password: '{{ esxi_password }}'   
          validate_certs: no
          switch: vSwitch1
          mtu: 9000
        delegate_to: localhost

      - name: Configure ESXi hostname and upstream DNS servers
        vmware_dns_config:
          hostname: '{{ esxi_address }}'
          username: '{{ esxi_username }}'
          password: '{{ esxi_password }}'   
          validate_certs: no
          change_hostname_to: '{{ esxi_hostname }}'
          domainname: '{{ lab_dc01_domain }}'
          dns_servers:
          - '{{ vm_network_dns }}'
        delegate_to: localhost

    - name: Build Windows VM - DC01
      meta: noop
    - block:
      - include_vars: defaults/Build_Windows_VM_from_ISO.yml
      - set_fact:
          vm_name: '{{lab_dc01_hostname}}'         
          vm_datastore: '{{vm_datastore}}'
          vm_network: '{{vm_network_portgroup}}'
          vm_password_new: "{{lab_password}}"
          vm_hostname: "{{lab_dc01_hostname}}"
          vm_address: "{{lab_dc01_ip}}"
          vm_netmask_cidr: "{{vm_network_netmask_cidr}}"
          vm_gateway: "{{vm_network_gateway}}"
          vm_dns_server: "{{vm_network_dns}}"
          vm_domain: "{{lab_dc01_domain}}"
      - include_tasks: tasks/Build_Windows_VM_from_ISO.yml
      when: skip_dc01_vm is not true

    - name: Build a Active Directory Forest
      meta: noop
    - block:
      - set_fact:
          vm_name: '{{lab_dc01_hostname}}'
          vm_username: ".\\Administrator" 
          vm_password: "{{lab_password}}"         
          vm_dns_server: "{{vm_network_dns}}"
          vm_domain: "{{lab_dc01_domain}}"
      - include_tasks: tasks/Create_New_Active_Directory_using_vm_shell.yml
      when: skip_dc01_vm is not true    

    - name: Perform additional configuration steps on DC01
      community.vmware.vmware_vm_shell:
        hostname: '{{ vcenter_address }}'
        username: '{{ vcenter_username }}'
        password: '{{ vcenter_password }}' 
        validate_certs: no
        vm_username: ".\\Administrator"
        vm_password: "{{lab_password}}"
        vm_id: '{{lab_dc01_hostname}}'
        vm_shell: 'c:\windows\system32\windowspowershell\v1.0\powershell.exe'
        vm_shell_args: " -command \"({{item}})\""
        wait_for_process: true
      delegate_to: localhost
      retries: 6
      delay: 10 
      register: result           
      until: result is succeeded 
      when: skip_dc01_extras is not true    
      loop:
        # Add vCenter DNS record    
        #- "Add-DnsServerResourceRecordA -Name {{lab_vcsa_hostname}} -ZoneName {{lab_domain_name}} -AllowUpdateAny -IPv4Address {{lab_vcsa_ip}} -TimeToLive 01:00:00"
        # Add ESX01 DNS record
        #- "Add-DnsServerResourceRecordA -Name {{lab_esx01_hostname}} -ZoneName {{lab_domain_name}} -AllowUpdateAny -IPv4Address {{lab_esx01_ip}} -TimeToLive 01:00:00"
        # Add ESX01 DNS record
        #- "Add-DnsServerResourceRecordA -Name {{lab_esx02_hostname}} -ZoneName {{lab_domain_name}} -AllowUpdateAny -IPv4Address {{lab_esx02_ip}} -TimeToLive 01:00:00"
        # Add ESX01 DNS record
        #- "Add-DnsServerResourceRecordA -Name {{lab_esx03_hostname}} -ZoneName {{lab_domain_name}} -AllowUpdateAny -IPv4Address {{lab_esx03_ip}} -TimeToLive 01:00:00"
        # Add ESX01 DNS record
        #- "Add-DnsServerResourceRecordA -Name {{lab_esx04_hostname}} -ZoneName {{lab_domain_name}} -AllowUpdateAny -IPv4Address {{lab_esx04_ip}} -TimeToLive 01:00:00"
        # Disable Admin IEESC
        - "set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components{A509B1A7-37EF-4b3f-8CFC-4F3A74704073}' -name IsInstalled -Value 0"
        # Disable User IEESC
        - "set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components{A509B1A8-37EF-4b3f-8CFC-4F3A74704073}' -name IsInstalled -Value 0"

    - name: Build vCenter Appliance from OVA
      meta: noop
    - block:
      - include_vars: defaults/Build_vCenter_from_OVA.yml
      - set_fact:
          # ova_file: "files/VMware/VMware-vCenter-Server-Appliance-7.0.1.00200-17327517_OVF10.ova"
          vm_name: '{{lab_name}}_{{lab_vcsa_hostname}}'
          vm_hostname: '{{lab_vcsa_hostname}}'
          vm_domain: '{{lab_domain_name}}'
          vm_fqdn: '{{lab_vsca_fqdn_or_ip}}'  # if no DNS resolution, use the IP address here
          vm_network: '{{lab_lan1_portgroup}}'
          vm_password: '{{lab_password}}'
          vm_net_mode: "static" # static or dhcp
          vm_address: '{{lab_vcsa_ip}}'
          vm_netmask_cidr: '{{lab_lan1_netmask_cidr}}'
          vm_dns_server: '{{lab_lan1_dns_ip}}'
          vm_gateway: '{{lab_lan1_gateway}}'
          # searchpath: ""
          # vm_deployment_size: 'tiny' 
          vm_autoconfig: '{{lab_vcsa_autoconfigure}}'
          # vm_enable_ssh: 'True'
      - include_tasks: tasks/Build_vCenter_from_OVA.yml
      when: skip_vcsa_vm is not true

    - name: Deploy an ONTAP Select standalone eval node
      meta: noop
    - block:
      - include_vars: defaults/Build_ONTAPSelectEval_from_OVA.yml
      - set_fact:
          # ontap_select_ova: "files/9.8_DataONTAPv-esx-standalone-eval-nodar.ova" 
          # ontap_deployment_option: 'ONTAPSelectEVALSmall' # <=9.5 use 'ONTAPSelectEVAL', 9.6+ use 'ONTAPSelectEVALSmall'
          vm_name: Test_ONTAPSelect7g
          # vm_network: "VM Network"
          vm_num_cpus: 4
          # vm_cpu_reservation_mhz: 1000        
          vm_memory_mb: 7164    
          vm_data_disk_gb: "100"
          # vm_disk_rovisioning: thin 
          ontap_cluster_name: "ONTAP"
          ontap_cluster_mgmt_ip: "192.168.123.180"    
          ontap_node_mgmt_ip: "192.168.123.181"
          ontap_netmask: "255.255.255.0"
          ontap_gateway: "192.168.123.1" 
          ontap_password: "P@ssw0rd"
          ontap_dns_domain: "lab.local"
          ontap_dns_server: "192.168.123.1"
      - include_tasks: tasks/Build_ONTAPSelectEval_from_OVA.yml
      when: skip_ots_vm is not true

# To Do in -configure
# Configure vCenter
# Configure OTS
# Perform Integration
# Install and configure the portal app

